using System;
using System.Collections.Generic;
using System.Text;
using AutoFixture;
using AutoFixture.Kernel;
using AutoFixture.Repositories;
using AutoFixtureDemo.Services;
using Castle.DynamicProxy.Generators.Emitters.SimpleAST;
using Xunit;

namespace Tests
{
    public class ServiceWithPrimitiveTypesTests
    {
        [Fact]
        public void Sut_WasCreated_Without_AutoMoqCustomization()
        {
            var fixture = new Fixture();
            
            // Exception will not be thrown because constructor with primitive types parameters could be handled by fixture
            fixture.Create<ServiceWithPrimitiveTypes>();
        }

        [Fact]
        public void Register_AutogeneratedString()
        {
            var fixture = new Fixture();
            var autoGeneratedText = fixture.Create<string>();
            fixture.Register(()=>autoGeneratedText);

            // Exception will not be thrown because constructor with primitive types parameters could be handled by fixture
            var sut = fixture.Create<ServiceWithPrimitiveTypes>();

            Assert.Equal(autoGeneratedText, sut.Name);
        }
    }
}
